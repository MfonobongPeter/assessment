@model EventManager.ViewModels.EventViewModel
@{
    ViewBag.Title = "Add Event";
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h4>
            Add Event
        </h4>

    </section>
    <br>
    <!-- Main content -->
    <section class="content">

        <div class="box">
            <div class="col-sm-12">
                <a href="@Url.Action("dashboard", "admin")" class="btn btn-danger" style="float:right; margin:10px 10px 10px 0;">
                    <i class="fa fa-plus">
                    </i> Dashboard
                </a>
            </div>
            <br />
            <div class="form-horizontal">
                @using (Html.BeginForm("AddEvent", "Event", FormMethod.Post, new { @id = "frmAdd", @class = "col-xs-12" }))
                {
                    if (ViewBag.DisplayMessage == "success")
                    {
                        if (ViewData.ModelState[""] != null)
                        {
                            <div class="bs-example">
                                <div class="alert alert-success fade in">
                                    <a href="#" class="close" data-dismiss="alert">×</a>
                                    <strong style="color: green;">Success!</strong>@Html.ValidationSummary(true, "", new { @class = "success" })<br />
                                </div>
                            </div>
                        }
                    }
                    else if (ViewBag.DisplayMessage == "Info")
                    {
                        if (ViewData.ModelState[""] != null)
                        {
                            <div class="bs-example">
                                <div class="alert alert-danger fade in">
                                    <a href="#" class="close" data-dismiss="alert">×</a>
                                    <strong>Info!</strong>@Html.ValidationSummary(true, "", new { @class = "text-danger" })<br />
                                </div>
                            </div>
                        }
                    }
                    @Html.AntiForgeryToken()
                    <div class="box-body" style="box-shadow: 0 3px 6px 1px  #ccc; border-radius:15px; width:auto; margin-left:50px;padding-left:10px;">
                        <br /><br />
                        <div class="row" style="font-family:Calibri; font-size:12px;">


                            <div class="col-sm-7">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-7">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EventDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EventDesc, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EventDesc, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-7">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EventTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EventTime, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EventTime, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-7">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-7">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EventFee, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EventFee, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EventFee, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-7">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EventVenueId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.EventVenueId, (IEnumerable<SelectListItem>)ViewBag.fkEventVenueList, "---Select---", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.EventVenueId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-7">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.EventType, (IEnumerable<SelectListItem>)ViewBag.EventType, "---Select---", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.EventType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <br />
                        <br />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Submit" class="btn btn-primary" style="border-radius:5px;" />
                            </div>
                        </div>
                        <br /><br />
                    </div>
                }
            </div>
            <div class="box-footer">
                @*Footer*@
            </div>
        </div>
    </section>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


